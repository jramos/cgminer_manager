- @summary.each_pair{|key, values| values.compact!}

#summary
  = render partial: 'warnings'

  .container
    = render partial: 'shared/graphs/hashrate', locals: { target: 'local' }

    #total-ghs
      - avg_ghs_5s = @summary[:ghs_5s].sum / @summary[:ghs_5s].count rescue 0
      - avg_ghs_avg = @summary[:ghs_avg].sum / @summary[:ghs_avg].count rescue 0

      %table(cellpadding="0" cellspacing="0")
        %tbody
          %thead
            %th
            %th Global
            %th Min
            %th Avg
            %th Max
          %tr
            %td 5s
            %td.text-center= format_hashrate(@summary[:ghs_5s].sum * 1e9 )
            %td.text-center= format_hashrate(@summary[:ghs_5s].min * 1e9 )
            %td.text-center= format_hashrate(avg_ghs_5s * 1e9)
            %td.text-center= format_hashrate(@summary[:ghs_5s].max * 1e9 )
          %tr
            %td Avg
            %td.text-center= format_hashrate(@summary[:ghs_avg].sum * 1e9)
            %td.text-center= format_hashrate(@summary[:ghs_avg].min * 1e9 )
            %td.text-center= format_hashrate(avg_ghs_avg * 1e9)
            %td.text-center= format_hashrate(@summary[:ghs_avg].max * 1e9 )

  .container
    = render partial: 'shared/graphs/temperature', locals: { target: 'local' }

    #temperature
      %table(cellpadding="0" cellspacing="0")
        %tbody
          %thead
            %th
            %th Min
            %th Avg
            %th Max
          %tr
            %td C
            %td.text-center= raw((@summary[:temperature].min).round(1).to_s + '&deg;') rescue raw('&dash;')
            %td.text-center= raw((@summary[:temperature].sum / @summary[:temperature].count).round(1).to_s + '&deg;') rescue raw('&dash;')
            %td.text-center= raw((@summary[:temperature].max).round(1).to_s + '&deg;') rescue raw('&dash;')
          %tr
            %td F
            %td.text-center= raw(to_ferinheight(@summary[:temperature].min).round(1).to_s + '&deg;') rescue raw('&dash;')
            %td.text-center= raw(to_ferinheight(@summary[:temperature].sum / @summary[:temperature].count).round(1).to_s + '&deg;') rescue raw('&dash;')
            %td.text-center= raw(to_ferinheight(@summary[:temperature].max).round(1).to_s + '&deg;') rescue raw('&dash;')

  .container
    = render partial: 'shared/graphs/hardware_error_hashrate', locals: { target: 'local' }

    #error-rate
      - avg_error_pct = @summary[:error_rate].sum / @summary[:error_rate].count rescue 0
      - avg_error_rate = avg_error_pct / 100

      %table(cellpadding="0" cellspacing="0")
        %tbody
          %thead
            %th
            %th Global
            %th Min
            %th Avg
            %th Max
          %tr
            %td 5s
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_5s].sum * 1e9)
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_5s].min * 1e9)
            %td.text-center= format_hashrate(((avg_error_rate * @summary[:ghs_5s].sum * 1e9 / @summary[:error_rate].count) rescue 0))
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_5s].max * 1e9)
          %tr
            %td Avg
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_avg].sum * 1e9)
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_avg].min * 1e9)
            %td.text-center= format_hashrate(((avg_error_rate * @summary[:ghs_avg].sum * 1e9 / @summary[:error_rate].count) rescue 0))
            %td.text-center= format_hashrate(avg_error_rate * @summary[:ghs_avg].max * 1e9)
          %tr
            %td %
            %td.text-center &dash;
            %td.text-center= @summary[:error_rate].min.round(2).to_s + '%'
            %td.text-center= avg_error_pct.round(2).to_s + '%'
            %td.text-center= @summary[:error_rate].max.round(2).to_s + '%'

  .container
    = render partial: 'shared/graphs/pool_rejected_hashrate', locals: { target: 'local' }

    #rejected-rate
      - avg_rejected_pct = @summary[:rejected_rate].sum / @summary[:rejected_rate].count rescue 0
      - avg_rejected_rate = avg_rejected_pct / 100
  
      %table(cellpadding="0" cellspacing="0")
        %tbody
          %thead
            %th
            %th Global
            %th Min
            %th Avg
            %th Max
          %tr
            %td 5s
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_5s].sum * 1e9)
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_5s].min * 1e9)
            %td.text-center= format_hashrate(((avg_rejected_rate * @summary[:ghs_5s].sum * 1e9 / @summary[:rejected_rate].count) rescue 0))
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_5s].max * 1e9)
          %tr
            %td Avg
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_avg].sum * 1e9)
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_avg].min * 1e9)
            %td.text-center= format_hashrate(((avg_rejected_rate * @summary[:ghs_avg].sum * 1e9 / @summary[:rejected_rate].count) rescue 0))
            %td.text-center= format_hashrate(avg_rejected_rate * @summary[:ghs_avg].max * 1e9)
          %tr
            %td %
            %td.text-center &dash;
            %td.text-center= @summary[:rejected_rate].min.round(2).to_s + '%'
            %td.text-center= avg_rejected_pct.round(2).to_s + '%'
            %td.text-center= @summary[:rejected_rate].max.round(2).to_s + '%'

  .container
    = render partial: 'shared/graphs/pool_stale_hashrate', locals: { target: 'local' }

    #pool-stale
      - avg_stale_pct = @summary[:pool_stale].sum / @summary[:pool_stale].count rescue 0
      - avg_stale_rate = avg_stale_pct / 100

      %table(cellpadding="0" cellspacing="0")
        %tbody
          %thead
            %th
            %th Global
            %th Min
            %th Avg
            %th Max
          %tr
            %td 5s
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_5s].sum * 1e9)
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_5s].min * 1e9)
            %td.text-center= format_hashrate(((avg_stale_rate * @summary[:ghs_5s].sum * 1e9 / @summary[:pool_stale].count) rescue 0))
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_5s].max * 1e9)
          %tr
            %td Avg
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_avg].sum * 1e9)
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_avg].min * 1e9)
            %td.text-center= format_hashrate(((avg_stale_rate * @summary[:ghs_avg].sum * 1e9 / @summary[:pool_stale].count) rescue 0))
            %td.text-center= format_hashrate(avg_stale_rate * @summary[:ghs_avg].max * 1e9)
          %tr
            %td %
            %td.text-center &dash;
            %td.text-center= @summary[:pool_stale].min.round(2).to_s + '%'
            %td.text-center= avg_stale_pct.round(2).to_s + '%'
            %td.text-center= @summary[:pool_stale].max.round(2).to_s + '%'
